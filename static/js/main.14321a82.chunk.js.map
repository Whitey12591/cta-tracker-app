{"version":3,"sources":["Components/TimeCard/TimeCard.tsx","Assets/sampleData.ts","App.tsx","serviceWorker.js","index.js"],"names":["TimeCard","props","eta","arrT","prdt","destNm","now","moment","utc","format","then","react_default","a","createElement","Fragment","className","diff","sampleData","ctatt","tmst","Date","errCd","errNm","staId","stpId","staNm","stpDe","rn","rt","destSt","trDr","isApp","isSch","isDly","isFlt","flags","lat","lon","heading","App","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","loadData","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","axios","get","concat","result","arrivalTimes","data","loop","filter","key","kimball","setState","isLoaded","loopArrivals","kimballArrivals","stop","loadMockData","state","error","time","inherits","createClass","value","setInterval","_this$state","map","Components_TimeCard_TimeCard","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.14321a82.chunk.js","sourcesContent":["import React from 'react';\nimport { Eta } from '../../Data/cta_dto';\nimport './TimeCard.css';\nimport moment from 'moment';\n\ninterface ITimeCardProps {\n  eta: Eta;\n}\n\nconst TimeCard = (props: ITimeCardProps) => {\n  const { eta } = props;\n  const { arrT, prdt, destNm } = eta;\n\n  var now = moment.utc(prdt).format('DD/MM/YYYY HH:mm:ss');\n  var then = moment.utc(arrT).format('DD/MM/YYYY HH:mm:ss');\n\n  return (\n    <React.Fragment>\n      <div className=\"card-container\">\n        <div className=\"destination\">{destNm}</div>\n        <div className=\"time-until\">\n          {moment\n            .utc(moment(then, 'DD/MM/YYYY HH:mm:ss').diff(moment(now, 'DD/MM/YYYY HH:mm:ss')))\n            .format('m') + ' min'}\n        </div>\n        <div>{moment.utc(arrT).format('h:mm a')}</div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default TimeCard;\n","import { RootObject } from '../Data/cta_dto';\n\nexport const sampleData: RootObject = {\n  ctatt: {\n    tmst: new Date(),\n    errCd: '0',\n    errNm: null,\n    eta: [\n      {\n        staId: '40360',\n        stpId: '30070',\n        staNm: 'Southport',\n        stpDe: 'Service toward Kimball',\n        rn: '426',\n        rt: 'Brn',\n        destSt: '30249',\n        destNm: 'Kimball',\n        trDr: '1',\n        prdt: new Date(),\n        arrT: new Date(),\n        isApp: '0',\n        isSch: '0',\n        isDly: '0',\n        isFlt: '0',\n        flags: null,\n        lat: '41.93276',\n        lon: '-87.65313',\n        heading: '359'\n      },\n      {\n        staId: '40360',\n        stpId: '30071',\n        staNm: 'Southport',\n        stpDe: 'Service toward Loop',\n        rn: '422',\n        rt: 'Brn',\n        destSt: '30249',\n        destNm: 'Loop',\n        trDr: '5',\n        prdt: new Date(),\n        arrT: new Date(),\n        isApp: '0',\n        isSch: '0',\n        isDly: '0',\n        isFlt: '0',\n        flags: null,\n        lat: '41.96175',\n        lon: '-87.67517',\n        heading: '179'\n      },\n      {\n        staId: '40360',\n        stpId: '30071',\n        staNm: 'Southport',\n        stpDe: 'Service toward Loop',\n        rn: '423',\n        rt: 'Brn',\n        destSt: '30249',\n        destNm: 'Loop',\n        trDr: '5',\n        prdt: new Date(),\n        arrT: new Date(),\n        isApp: '0',\n        isSch: '0',\n        isDly: '0',\n        isFlt: '0',\n        flags: null,\n        lat: '41.96609',\n        lon: '-87.70882',\n        heading: '89'\n      },\n      {\n        staId: '40360',\n        stpId: '30070',\n        staNm: 'Southport',\n        stpDe: 'Service toward Kimball',\n        rn: '433',\n        rt: 'Brn',\n        destSt: '30249',\n        destNm: 'Kimball',\n        trDr: '1',\n        prdt: new Date(),\n        arrT: new Date(),\n        isApp: '0',\n        isSch: '0',\n        isDly: '0',\n        isFlt: '0',\n        flags: null,\n        lat: '41.91041',\n        lon: '-87.63886',\n        heading: '269'\n      }\n    ]\n  }\n};\n","import React, { Component } from 'react'; // let's also import Component\nimport axios from 'axios';\nimport { RootObject, Eta, Ctatt } from './Data/cta_dto';\nimport TimeCard from './Components/TimeCard/TimeCard';\nimport './App.css';\nimport { sampleData } from './Assets/sampleData';\n\ninterface IState {\n  error: boolean;\n  isLoaded: boolean;\n  loopArrivals: Eta[];\n  kimballArrivals: Eta[];\n  time: Date;\n}\n\nexport class App extends Component<{}, IState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      error: false,\n      isLoaded: false,\n      loopArrivals: [] as Eta[],\n      kimballArrivals: [] as Eta[],\n      time: new Date()\n    };\n  }\n\n  loadData = async () => {\n    axios\n      .get<RootObject>(\n        `${'https://cors-anywhere.herokuapp.com/'}https://lapi.transitchicago.com/api/1.0/ttarrivals.aspx?key=d4102257b59c4a0a82809fec190a2140&outputType=JSON&mapid=40360`\n      )\n      .then(result => {\n        const arrivalTimes = result.data.ctatt.eta;\n        const loop = arrivalTimes.filter((eta: Eta, key) => {\n          return eta.destNm === 'Loop';\n        });\n\n        const kimball = arrivalTimes.filter((eta: Eta, key) => {\n          return eta.destNm === 'Kimball';\n        });\n        this.setState({\n          isLoaded: true,\n          loopArrivals: loop,\n          kimballArrivals: kimball\n        });\n      });\n  };\n\n  loadMockData = () => {\n    const response = sampleData;\n    const arrivalTimes = response.ctatt.eta;\n\n    const loop = arrivalTimes.filter((eta: any, key) => {\n      return eta.destNm === 'Loop';\n    });\n\n    const kimball = arrivalTimes.filter((eta: any, key) => {\n      return eta.destNm === 'Kimball';\n    });\n\n    this.setState({\n      isLoaded: true,\n      loopArrivals: loop,\n      kimballArrivals: kimball\n    });\n  };\n\n  componentDidMount() {\n    this.loadData();\n    setInterval(this.loadData, 10000);\n    // this.loadMockData();\n    // setInterval(this.loadMockData, 10000);\n  }\n\n  render() {\n    const { error, isLoaded, loopArrivals, kimballArrivals } = this.state;\n    if (error) {\n      return <div>Error: </div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <React.Fragment>\n          <div className=\"app-container\">\n            {loopArrivals.map((time: Eta, key) => (\n              <TimeCard key={key} eta={time} />\n            ))}\n          </div>\n          <div className=\"app-container\">\n            {kimballArrivals.map((time: Eta, key) => (\n              <TimeCard key={key} eta={time} />\n            ))}\n          </div>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}